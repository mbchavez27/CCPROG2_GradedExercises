#include "pig.h"

int isVowel(string aWords[]) {
  char vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'};
  int i = 0;
  int char = 0;
  int isVowel = 0;

  for (i = 0; i < strlen(aWords); i++) {
    if (aWords[0] ==)
  }

  return isVowel;
}

void split(string aWords[], int *pElem, longString sentence) {
  int i = 0;
  int character = 0;
  while (sentence[i] != '\0') {
    aWords[*pElem][character] = sentence[i];
    if (sentence[i] == ' ') {
      character = 0;
      *pElem += 1;
    } else {
      character++;
    }
    i++;
  }
}

/* Note that the original word should not be modified.
   Apart from placing the pig latin equivalent in result,
   the function also returns the starting address to result.
*/
char *toPigLatin(char *result, char *word) {}

/* This function displays the contents of aWords, separating each entry
   in the display with one space.
*/
void display(string aWords[], int nElem) {}

/* This function concatenates the contents of aWords into the
   result (thereby forming a new sentence).  Concatenation of
   words is separated by one space after each element of aWords.
*/
void concatenate(longString result, string aWords[], int nElem) {}
